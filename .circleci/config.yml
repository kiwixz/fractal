version: 2.1

jobs:
  "build":
    docker:
      - image: kiwixz/arch-vcpkg:2019-02-17
    environment:
      CMAKE_BUILD_PARALLEL_LEVEL: 4
    steps:
      - checkout
      - restore_cache:
          name: Restore pacman cache
          keys:
            - packages-0-{{ .Branch }}-{{ .Revision }}
            - packages-0-{{ .Branch }}-
            - packages-0-
      - run:
          name: Install system dependencies
          command: |
            pacman --color=always --needed --noconfirm -Sy  \
                clang cmake lld ninja python3  \
                libxcursor libxinerama libxrandr  `# glfw`  \
                nasm  `# x265`
            ln -s "/opt/vcpkg"
      - save_cache:
          name: Save pacman cache
          key: packages-0-{{ .Branch }}-{{ .Revision }}
          paths:
            - /var/cache/pacman/pkg
      - restore_cache:
          name: Restore vcpkg cache
          keys:
            - vcpkg-0-{{ .Branch }}-{{ .Revision }}
            - vcpkg-0-{{ .Branch }}-
            - vcpkg-0-
      - run:
          name: Install vcpkg dependencies
          command: |
            ./install_libs.py
            kiwixz_cleanup_vcpkg
      - save_cache:
          name: Save vcpkg cache
          key: vcpkg-0-{{ .Branch }}-{{ .Revision }}
          paths:
            - /opt/vcpkg
      - run:
          name: Dump versions
          command: |
            pacman --color=always -Q
            vcpkg list
      - run:
          name: Test debug
          environment:
            CXXFLAGS: -fdiagnostics-color=always -Werror
            LDFLAGS: -fdiagnostics-color=always -Werror -fuse-ld=lld
            ASAN_OPTIONS: check_initialization_order=1
            UBSAN_OPTIONS: print_stacktrace=1
          command: |
            mkdir -p "build/debug"
            cd "build/debug"
            cmake -G Ninja -D "CMAKE_BUILD_TYPE=Debug" "../.."
            ninja
            ctest --output-on-failure -E "check_.*"
      - run:
          name: Test release
          environment:
            CXXFLAGS: -fdiagnostics-color=always -Werror
            LDFLAGS: -fdiagnostics-color=always -Werror -fuse-ld=lld
          command: |
            mkdir -p "build/release"
            cd "build/release"
            cmake -G Ninja -D "CMAKE_BUILD_TYPE=Release" "../.."
            ninja
            ctest --output-on-failure -E "check_.*"
      - run:
          name: Additional checks
          command: |
            cd "build/debug"
            ctest --output-on-failure -R "check_.*"
  "doc":
    docker:
      - image: alpine:3.9
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: |
            apk --update add  \
                doxygen graphviz  \
                git openssh
      - run:
          name: Generate documentation
          command: |
            mkdir "build"
            doxygen
      - deploy:
          name: Publish documentation
          command: |
            ssh-keyscan "github.com" >> ~/.ssh/known_hosts
            git clone -b "gh-pages" --depth 1 "$CIRCLE_REPOSITORY_URL" "build/gh-pages"
            mv "build/doc/html" "build/gh-pages/doc/$CIRCLE_BRANCH"
            git -C "build/gh-pages" add -A
            git -C "build/gh-pages" commit -m "[ci] update doc/$CIRCLE_BRANCH commit $CIRCLE_SHA1"
            git -C "build/gh-pages" push
      - store_artifacts:
          path: /doc

workflows:
  version: 2
  all:
    jobs:
      - "build"
      - "doc":
          filters:
            branches:
              only: master
